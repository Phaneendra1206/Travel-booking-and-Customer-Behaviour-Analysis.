import mysql.connector
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# Step 1: Connect to MySQL
conn = mysql.connector.connect(
    host='localhost',
    user='root',
    password='Toyaja1',
    database='travel'
)
# Step 2: Fetch data
query = """
SELECT
    b.booking_id,
    c.name AS customer_name,
    p.destination,
    s.name AS season,
    b.num_people,
    b.status,
    f.rating
FROM bookings b
JOIN customers c ON b.customer_id = c.customer_id
JOIN packages p ON b.package_id = p.package_id
JOIN seasons s ON b.season_id = s.season_id
LEFT JOIN feedback f ON b.booking_id = f.booking_id;
"""
df = pd.read_sql(query, conn)
conn.close()

# Step 3: Preview
print("Preview of data:")
print(df.head())

# Step 4: Plot 1 - Number of Bookings by Destination
plt.figure(figsize=(8, 5))
sns.countplot(data=df, x='destination', order=df['destination'].value_counts().index, palette='Set2')
plt.title('Number of Bookings per Destination')
plt.ylabel('Number of Bookings')
plt.xlabel('Destination')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Step 5: Plot 2 - Booking Status Count
plt.figure(figsize=(6, 4))
sns.countplot(data=df, x='status', palette='pastel')
plt.title('Booking Status (Confirmed vs Cancelled)')
plt.ylabel('Number of Bookings')
plt.xlabel('Status')
plt.tight_layout()
plt.show()

# Step 6: Plot 3 - Average Rating per Destination
plt.figure(figsize=(8, 5))
avg_rating = df.groupby('destination')['rating'].mean().sort_values(ascending=False)
sns.barplot(x=avg_rating.index, y=avg_rating.values, palette='coolwarm')
plt.title('Average Customer Rating per Destination')
plt.ylabel('Average Rating')
plt.xlabel('Destination')
plt.ylim(0, 5)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# --- NEW Chart 4: Bookings by Season (Pie Chart) ---
season_count = df['season'].value_counts()
plt.figure(figsize=(6, 6))
plt.pie(season_count, labels=season_count.index, autopct='%1.1f%%', startangle=140, colors=sns.color_palette('Accent'))
plt.title('Bookings by Season')
plt.tight_layout()
plt.show()

# --- NEW Chart 5: Total People per Destination ---
people_sum = df.groupby('destination')['num_people'].sum().sort_values(ascending=False)
plt.figure(figsize=(8, 5))
sns.barplot(x=people_sum.index, y=people_sum.values, palette='Set3')
plt.title('Total Travelers per Destination')
plt.ylabel('Total People')
plt.xlabel('Destination')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# --- NEW Chart 6: Heatmap of Numerical Correlation ---
plt.figure(figsize=(6, 4))
corr = df[['num_people', 'rating']].corr()
sns.heatmap(corr, annot=True, cmap='Blues')
plt.title('Correlation Between Number of People and Ratings')
plt.tight_layout()
plt.show()

# --- NEW Chart 7: Boxplot of Ratings by Destination ---
plt.figure(figsize=(8, 5))
sns.boxplot(data=df.dropna(subset=['rating']), x='destination', y='rating', palette='pastel')
plt.title('Rating Spread per Destination')
plt.xlabel('Destination')
plt.ylabel('Rating')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

